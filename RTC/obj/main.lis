 0000                   cpu LMM
                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile Z:\Desktop\RTC\RTC\main.c
 0000                   .dbfunc e putchar _putchar fI
 0000           ;              c -> X-4
 0000           _putchar::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002                   .dbline 28
 0002           ; //----------------------------------------------------------------------------
 0002           ; // C main line
 0002           ; //----------------------------------------------------------------------------
 0002           ; 
 0002           ; #include <m8c.h>        // part specific constants and macros
 0002           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0002           ; #include "Time.h"
 0002           ; #include "Keypad.h"
 0002           ; #include "Persist.h"
 0002           ; #include "viewManager.h"
 0002           ; #include "MainView.h"
 0002           ; #include "dateTimeView.h"
 0002           ; #include "regTimeView.h"
 0002           ; #include "levelView.h"
 0002           ; #include "configView.h"
 0002           ; #include "TempSensor.h"
 0002           ; #include "TempView.h"
 0002           ; #include "Logger.h"
 0002           ; #include "LedArray.h"
 0002           ; #include "DeletView.h"
 0002           ; #include "PCView.h"
 0002           ; #include "DevControl.h"
 0002           ; #include <string.h>
 0002           ; 
 0002           ; extern CurrentView currentView;
 0002           ; 
 0002           ; int putchar(char c)
 0002           ; {
 0002                   .dbline 29
 0002           ;       UART_PutChar(c);
 0002 10                push X
 0003 52FC              mov A,[X-4]
 0005 7C0000            xcall _UART_PutChar
 0008 20                pop X
 0009                   .dbline -2
 0009           L8:
 0009 20                pop X
 000A                   .dbline 0 ; func end
 000A 7F                ret
 000B                   .dbsym l c -4 c
 000B                   .dbend
 000B                   .dbfunc e main _main fV
 000B           _main::
 000B                   .dbline -1
 000B 10                push X
 000C 4F                mov X,SP
 000D 3802              add SP,2
 000F                   .dbline 33
 000F           ; }
 000F           ; 
 000F           ; void main(void)
 000F           ; {
 000F                   .dbline 34
 000F           ;       Time_Start();
 000F 7C0000            xcall _Time_Start
 0012                   .dbline 35
 0012           ;       Keypad_Start();
 0012 7C0000            xcall _Keypad_Start
 0015                   .dbline 36
 0015           ;       Persist_Start();
 0015 7C0000            xcall _Persist_Start
 0018                   .dbline 37
 0018           ;       LCD_Start();
 0018 10                push X
 0019 7C0000            xcall _LCD_Start
 001C 20                pop X
 001D                   .dbline 38
 001D           ;       MainView_Start();
 001D 7C0000            xcall _MainView_Start
 0020                   .dbline 39
 0020           ;       DateTimeView_Start();
 0020 7C0000            xcall _DateTimeView_Start
 0023                   .dbline 40
 0023           ;       RegTimeView_Start();
 0023 7C0000            xcall _RegTimeView_Start
 0026                   .dbline 41
 0026           ;       LevelView_Start();
 0026 7C0000            xcall _LevelView_Start
 0029                   .dbline 42
 0029           ;       ConfigView_Start();
 0029 7C0000            xcall _ConfigView_Start
 002C                   .dbline 43
 002C           ;       TempSensor_Start();
 002C 7C0000            xcall _TempSensor_Start
 002F                   .dbline 44
 002F           ;       Logger_Start();
 002F 7C0000            xcall _Logger_Start
 0032                   .dbline 45
 0032           ;       Leds_Start();
 0032 7C0000            xcall _Leds_Start
 0035                   .dbline 46
 0035           ;       DevControl_Start();
 0035 7C0000            xcall _DevControl_Start
 0038                   .dbline 48
 0038           ; 
 0038           ;       UART_Start(UART_PARITY_NONE);
 0038 10                push X
 0039 5000              mov A,0
 003B 7C0000            xcall _UART_Start
 003E                   .dbline 49
 003E           ;       UART_IntCntl(UART_ENABLE_RX_INT);
 003E 5001              mov A,1
 0040 7C0000            xcall _UART_IntCntl
 0043 20                pop X
 0044                   .dbline 51
 0044           ; 
 0044           ;       M8C_EnableGInt;
 0044 7101                      or  F, 01h
 0046           
 0046                   .dbline 53
 0046           ; 
 0046           ;       MainView_Callback();
 0046 7C0000            xcall _MainView_Callback
 0049                   .dbline 55
 0049           ; 
 0049           ;       for(;;)
 0049           L10:
 0049                   .dbline 56
 0049           ;       {
 0049                   .dbline 57
 0049           ;               switch(currentView)
 0049 62D000            mov REG[0xd0],>_currentView
 004C 5100              mov A,[_currentView]
 004E 5401              mov [X+1],A
 0050 560000            mov [X+0],0
 0053 3D0000            cmp [X+0],0
 0056 B006              jnz X1
 0058 3D0100            cmp [X+1],0
 005B A049              jz L17
 005D           X1:
 005D 3D0000            cmp [X+0],0
 0060 B006              jnz X2
 0062 3D0101            cmp [X+1],1
 0065 A044              jz L18
 0067           X2:
 0067 3D0000            cmp [X+0],0
 006A B006              jnz X3
 006C 3D0102            cmp [X+1],2
 006F A03F              jz L19
 0071           X3:
 0071 3D0000            cmp [X+0],0
 0074 B006              jnz X4
 0076 3D0103            cmp [X+1],3
 0079 A03A              jz L20
 007B           X4:
 007B 3D0000            cmp [X+0],0
 007E B006              jnz X5
 0080 3D0104            cmp [X+1],4
 0083 A035              jz L21
 0085           X5:
 0085 3D0000            cmp [X+0],0
 0088 B006              jnz X6
 008A 3D0105            cmp [X+1],5
 008D A030              jz L22
 008F           X6:
 008F 3D0000            cmp [X+0],0
 0092 B006              jnz X7
 0094 3D0106            cmp [X+1],6
 0097 A02B              jz L23
 0099           X7:
 0099 3D0000            cmp [X+0],0
 009C B006              jnz X8
 009E 3D0107            cmp [X+1],7
 00A1 A026              jz L24
 00A3           X8:
 00A3 8027              xjmp L14
 00A5           L17:
 00A5                   .dbline 60
 00A5           ;               {
 00A5           ;                       case MAIN:
 00A5           ;                               MainView_Update();
 00A5 7C0000            xcall _MainView_Update
 00A8                   .dbline 61
 00A8           ;                               break;
 00A8 8022              xjmp L15
 00AA           L18:
 00AA                   .dbline 63
 00AA           ;                       case DATETIME_CONFIG:
 00AA           ;                               DateTimeView_Update();
 00AA 7C0000            xcall _DateTimeView_Update
 00AD                   .dbline 64
 00AD           ;                               break;
 00AD 801D              xjmp L15
 00AF           L19:
 00AF                   .dbline 66
 00AF           ;                       case REGTIME_CONFIG:
 00AF           ;                               RegTimeView_Update();
 00AF 7C0000            xcall _RegTimeView_Update
 00B2                   .dbline 67
 00B2           ;                               break;
 00B2 8018              xjmp L15
 00B4           L20:
 00B4                   .dbline 69
 00B4           ;                       case LEVEL_CONFIG:
 00B4           ;                               LevelView_Update();
 00B4 7C0000            xcall _LevelView_Update
 00B7                   .dbline 70
 00B7           ;                               break;
 00B7 8013              xjmp L15
 00B9           L21:
 00B9                   .dbline 72
 00B9           ;                       case CONFIG:
 00B9           ;                               ConfigView_Update();
 00B9 7C0000            xcall _ConfigView_Update
 00BC                   .dbline 73
 00BC           ;                               break;
 00BC 800E              xjmp L15
 00BE           L22:
 00BE                   .dbline 75
 00BE           ;                       case TEMP:
 00BE           ;                               TempView_Update();
 00BE 7C0000            xcall _TempView_Update
 00C1                   .dbline 76
 00C1           ;                               break;
 00C1 8009              xjmp L15
 00C3           L23:
 00C3                   .dbline 78
 00C3           ;                       case DELET:
 00C3           ;                               DeletView_Update();
 00C3 7C0000            xcall _DeletView_Update
 00C6                   .dbline 79
 00C6           ;                               break;
 00C6 8004              xjmp L15
 00C8           L24:
 00C8                   .dbline 81
 00C8           ;                       case PC:
 00C8           ;                               PCView_Update();
 00C8 7C0000            xcall _PCView_Update
 00CB                   .dbline 83
 00CB           ;                               //Funcion para checar comando
 00CB           ;                               break;
 00CB           L14:
 00CB           L15:
 00CB                   .dbline 85
 00CB           ;               }
 00CB           ;               Logger_Loop();
 00CB 7C0000            xcall _Logger_Loop
 00CE                   .dbline 86
 00CE           ;       }
 00CE                   .dbline 55
 00CE                   .dbline 55
 00CE 8F7A              xjmp L10
 00D0           X0:
 00D0                   .dbline -2
 00D0           L9:
 00D0 38FE              add SP,-2
 00D2 20                pop X
 00D3                   .dbline 0 ; func end
 00D3 8FFF              jmp .
 00D5                   .dbend
