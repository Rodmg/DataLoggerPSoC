 0000                   cpu LMM
                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile Z:\Desktop\RTC\RTC\main.c
 0000                   .dbfunc e putchar _putchar fI
 0000           ;              c -> X-4
 0000           _putchar::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002                   .dbline 24
 0002           ; //----------------------------------------------------------------------------
 0002           ; // C main line
 0002           ; //----------------------------------------------------------------------------
 0002           ; 
 0002           ; #include <m8c.h>        // part specific constants and macros
 0002           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0002           ; #include "Time.h"
 0002           ; #include "Keypad.h"
 0002           ; #include "Persist.h"
 0002           ; #include "viewManager.h"
 0002           ; #include "MainView.h"
 0002           ; #include "dateTimeView.h"
 0002           ; #include "regTimeView.h"
 0002           ; #include "levelView.h"
 0002           ; #include "configView.h"
 0002           ; #include "TempSensor.h"
 0002           ; #include "TempView.h"
 0002           ; #include "Logger.h"
 0002           ; #include <string.h>
 0002           ; 
 0002           ; extern CurrentView currentView;
 0002           ; 
 0002           ; int putchar(char c)
 0002           ; {
 0002                   .dbline 25
 0002           ;       UART_PutChar(c);
 0002 10                push X
 0003 52FC              mov A,[X-4]
 0005 7C0000            xcall _UART_PutChar
 0008 20                pop X
 0009                   .dbline -2
 0009           L8:
 0009 20                pop X
 000A                   .dbline 0 ; func end
 000A 7F                ret
 000B                   .dbsym l c -4 c
 000B                   .dbend
 000B                   .dbfunc e main _main fV
 000B           _main::
 000B                   .dbline -1
 000B 10                push X
 000C 4F                mov X,SP
 000D 3802              add SP,2
 000F                   .dbline 29
 000F           ; }
 000F           ; 
 000F           ; void main(void)
 000F           ; {
 000F                   .dbline 30
 000F           ;       Time_Start();
 000F 7C0000            xcall _Time_Start
 0012                   .dbline 31
 0012           ;       Keypad_Start();
 0012 7C0000            xcall _Keypad_Start
 0015                   .dbline 32
 0015           ;       Persist_Start();
 0015 7C0000            xcall _Persist_Start
 0018                   .dbline 33
 0018           ;       LCD_Start();
 0018 10                push X
 0019 7C0000            xcall _LCD_Start
 001C 20                pop X
 001D                   .dbline 34
 001D           ;       MainView_Start();
 001D 7C0000            xcall _MainView_Start
 0020                   .dbline 35
 0020           ;       DateTimeView_Start();
 0020 7C0000            xcall _DateTimeView_Start
 0023                   .dbline 36
 0023           ;       RegTimeView_Start();
 0023 7C0000            xcall _RegTimeView_Start
 0026                   .dbline 37
 0026           ;       LevelView_Start();
 0026 7C0000            xcall _LevelView_Start
 0029                   .dbline 38
 0029           ;       ConfigView_Start();
 0029 7C0000            xcall _ConfigView_Start
 002C                   .dbline 39
 002C           ;       TempSensor_Start();
 002C 7C0000            xcall _TempSensor_Start
 002F                   .dbline 40
 002F           ;       Logger_Start();
 002F 7C0000            xcall _Logger_Start
 0032                   .dbline 42
 0032           ; 
 0032           ;       UART_Start(UART_PARITY_NONE);
 0032 10                push X
 0033 5000              mov A,0
 0035 7C0000            xcall _UART_Start
 0038                   .dbline 43
 0038           ;       UART_IntCntl(UART_ENABLE_RX_INT);
 0038 5001              mov A,1
 003A 7C0000            xcall _UART_IntCntl
 003D 20                pop X
 003E                   .dbline 45
 003E           ; 
 003E           ;       M8C_EnableGInt;
 003E 7101                      or  F, 01h
 0040           
 0040                   .dbline 47
 0040           ; 
 0040           ;       MainView_Callback();
 0040 7C0000            xcall _MainView_Callback
 0043                   .dbline 49
 0043           ; 
 0043           ;       for(;;)
 0043           L10:
 0043                   .dbline 50
 0043           ;       {
 0043                   .dbline 51
 0043           ;               switch(currentView)
 0043 62D000            mov REG[0xd0],>_currentView
 0046 5100              mov A,[_currentView]
 0048 5401              mov [X+1],A
 004A 560000            mov [X+0],0
 004D 3D0000            cmp [X+0],0
 0050 B006              jnz X1
 0052 3D0100            cmp [X+1],0
 0055 A035              jz L17
 0057           X1:
 0057 3D0000            cmp [X+0],0
 005A B006              jnz X2
 005C 3D0101            cmp [X+1],1
 005F A030              jz L18
 0061           X2:
 0061 3D0000            cmp [X+0],0
 0064 B006              jnz X3
 0066 3D0102            cmp [X+1],2
 0069 A02B              jz L19
 006B           X3:
 006B 3D0000            cmp [X+0],0
 006E B006              jnz X4
 0070 3D0103            cmp [X+1],3
 0073 A026              jz L20
 0075           X4:
 0075 3D0000            cmp [X+0],0
 0078 B006              jnz X5
 007A 3D0104            cmp [X+1],4
 007D A021              jz L21
 007F           X5:
 007F 3D0000            cmp [X+0],0
 0082 B006              jnz X6
 0084 3D0105            cmp [X+1],5
 0087 A01C              jz L22
 0089           X6:
 0089 801D              xjmp L14
 008B           L17:
 008B                   .dbline 54
 008B           ;               {
 008B           ;                       case MAIN:
 008B           ;                               MainView_Update();
 008B 7C0000            xcall _MainView_Update
 008E                   .dbline 55
 008E           ;                               break;
 008E 8018              xjmp L15
 0090           L18:
 0090                   .dbline 57
 0090           ;                       case DATETIME_CONFIG:
 0090           ;                               DateTimeView_Update();
 0090 7C0000            xcall _DateTimeView_Update
 0093                   .dbline 58
 0093           ;                               break;
 0093 8013              xjmp L15
 0095           L19:
 0095                   .dbline 60
 0095           ;                       case REGTIME_CONFIG:
 0095           ;                               RegTimeView_Update();
 0095 7C0000            xcall _RegTimeView_Update
 0098                   .dbline 61
 0098           ;                               break;
 0098 800E              xjmp L15
 009A           L20:
 009A                   .dbline 63
 009A           ;                       case LEVEL_CONFIG:
 009A           ;                               LevelView_Update();
 009A 7C0000            xcall _LevelView_Update
 009D                   .dbline 64
 009D           ;                               break;
 009D 8009              xjmp L15
 009F           L21:
 009F                   .dbline 66
 009F           ;                       case CONFIG:
 009F           ;                               ConfigView_Update();
 009F 7C0000            xcall _ConfigView_Update
 00A2                   .dbline 67
 00A2           ;                               break;
 00A2 8004              xjmp L15
 00A4           L22:
 00A4                   .dbline 69
 00A4           ;                       case TEMP:
 00A4           ;                               TempView_Update();
 00A4 7C0000            xcall _TempView_Update
 00A7                   .dbline 70
 00A7           ;                               break;
 00A7           L14:
 00A7           L15:
 00A7                   .dbline 72
 00A7           ;               }
 00A7           ;               Logger_Loop();
 00A7 7C0000            xcall _Logger_Loop
 00AA                   .dbline 73
 00AA           ;       }
 00AA                   .dbline 49
 00AA                   .dbline 49
 00AA 8F98              xjmp L10
 00AC           X0:
 00AC                   .dbline -2
 00AC           L9:
 00AC 38FE              add SP,-2
 00AE 20                pop X
 00AF                   .dbline 0 ; func end
 00AF 8FFF              jmp .
 00B1                   .dbend
